#!/usr/bin/env bash

COMPANY_NAME='Karbon Industries'
COMPANY_URL='karbonindustri.es'
FULL_COMPANY_URL="http://${COMPANY_URL}"
AUTHOR='Shammel Lee'

# the order of these IS_* variables is important...
IS_SRC_DIR='src'
IS_BUILD_DIR='build'
IS_TEST_DIR='test'

IS_SRC_COFFEE_DIR="${IS_SRC_DIR}/coffee"
IS_SRC_COFFEE_TEST_DIR="${IS_SRC_COFFEE_DIR}/test"
IS_SRC_IMG_DIR="${IS_SRC_DIR}/img"
IS_SRC_JADE_DIR="${IS_SRC_DIR}/jade"
IS_SRC_JADE_INC_DIR="${IS_SRC_JADE_DIR}/inc"
IS_SRC_JADE_TEST_DIR="${IS_SRC_JADE_DIR}/test"
IS_SRC_STYL_DIR="${IS_SRC_DIR}/styl"
IS_SRC_STYL_INC_DIR="${IS_SRC_STYL_DIR}/inc"
IS_SRC_STYL_TEST_DIR="${IS_SRC_STYL_DIR}/test"
IS_SRC_VENDOR_DIR="${IS_SRC_DIR}/vendor"

IS_BUILD_CSS_DIR="${IS_BUILD_DIR}/css"
IS_BUILD_IMG_DIR="${IS_BUILD_DIR}/img"
IS_BUILD_JS_DIR="${IS_BUILD_DIR}/js"
IS_BUILD_VENDOR_DIR="${IS_BUILD_DIR}/vendor"

mkdir -p\
	${IS_SRC_COFFEE_DIR}\
	${IS_SRC_COFFEE_TEST_DIR}\
	${IS_SRC_IMG_DIR}\
	${IS_SRC_JADE_DIR}\
	${IS_SRC_JADE_INC_DIR}\
	${IS_SRC_JADE_TEST_DIR}\
	${IS_SRC_STYL_DIR}\
	${IS_SRC_STYL_INC_DIR}\
	${IS_SRC_STYL_TEST_DIR}\
	${IS_SRC_VENDOR_DIR}\
	${IS_BUILD_CSS_DIR}\
	${IS_BUILD_IMG_DIR}\
	${IS_BUILD_JS_DIR}\
	${IS_BUILD_VENDOR_DIR}\
	${IS_TEST_DIR}

# create coffeescript files unless they exist
coffeeFiles=(main)
for file in ${coffeeFiles[*]}
do
	f="${IS_SRC_COFFEE_DIR}/${file}.coffee"
	if [ ! -e $f ]
	then
		touch $f
	fi
done

# create jade files unless they exist
jadeFiles=(index)
for file in ${jadeFiles[*]}
do
	f="${IS_SRC_JADE_DIR}/${file}.jade"
	if [ ! -e $f ]
	then
		touch $f
	fi
done

# create stylus files unless they exist
stylusFiles=(main)
for file in ${stylusFiles[*]}
do
	f="${IS_SRC_STYL_DIR}/${file}.styl"
	if [ ! -e $f ]
	then
		case "${file}" in
		'main')
		cat <<-TEXT > $f
		@require 'nib'
		@require 'inc'
TEXT
			;;

			*) touch $f
			;;
		esac
	fi
done

# create stylus include files unless they exist
stylusIncFiles=(buttons colors config design index layout text)
for file in ${stylusIncFiles[*]}
do
	f="${IS_SRC_STYL_INC_DIR}/${file}.styl"
	if [ ! -e $f ]
	then
		case "${file}" in
		'index')
			cat <<-TEXT > $f
			@require 'config'
			@require 'colors'
			@require 'design'
			@require 'layout'
			@require 'text'
			@require 'buttons'
TEXT
			;;

		*) touch $f
			;;
		esac
	fi
done

# create git repo unless it exists
if [[ ! -d .git ]]
then
	git init --quiet ./
fi

# create .gitignore unless it exists
if [[ ! -e .gitignore ]]
then
	touch .gitignore
fi

# create Readme.md unless it exists
readme='Readme.md'
if [ ! -e $readme ]
then
cat <<EOF > $readme
# ${COMPANY_NAME}
[${COMPANY_URL}](${FULL_COMPANY_URL} "${COMPANY_NAME} website")
**author:** ${AUTHOR}
$(date)
EOF
fi

# create makefile unless it exists
makefile='Makefile'
if [ ! -e $makefile ]
then
cat <<EOF > $makefile
.PHONY: all clean main \$(DEV_DEPS) \$(PROD_DEPS) test

# CONFIG
SHELL     := /bin/bash
MAKEFLAGS  = -j \$(words \$(DEV_DEPS)) # limit parallel recipe execution

# DIRECTORIES
SRC.DIR            := ${IS_SRC_DIR}
BUILD.DIR          := ${IS_BUILD_DIR}
TEST.DIR           := ${IS_TEST_DIR}

SRC.COFFEE_DIR      = \$(SRC.DIR)/coffee
SRC.COFFEE_TEST_DIR = \$(SRC.COFFEE_DIR)/test
SRC.IMG_DIR         = \$(SRC.DIR)/img
SRC.JADE_DIR        = \$(SRC.DIR)/jade
SRC.JADE_INC_DIR    = \$(SRC.JADE_DIR)/inc
SRC.JADE_TEST_DIR   = \$(SRC.JADE_DIR)/test
SRC.STYLUS_DIR      = \$(SRC.DIR)/styl
SRC.STYLUS_INC_DIR  = \$(SRC.STYLUS_DIR)/inc
SRC.STYLUS_TEST_DIR = \$(SRC.STYLUS_DIR)/test
SRC.VENDOR_DIR      = \$(SRC.DIR)/vendor

BUILD.CSS_DIR       = \$(BUILD.DIR)/css
BUILD.IMG_DIR       = \$(BUILD.DIR)/img
BUILD.JS_DIR        = \$(BUILD.DIR)/js
BUILD.VENDOR_DIR    = \$(BUILD.DIR)/vendor

# DEPENDENCIES
DEV_DEPS           := dev.coffee dev.jade dev.styl
PROD_DEPS           = \$(DEV_DEPS:dev.%=prod.%)

# COMMANDS
JADE.CMD            = jade \$(JADE.FLAGS)
JADE.FLAGS         := --pretty
COFFEE.CMD          = coffee \$(COFFEE.FLAGS)
COFFEE.FLAGS       := --compile --no-header
STYLUS.CMD          = stylus \$(STYLUS.FLAGS)
STYLUS.FLAGS       := --use 'nib'
MOCHA.CMD           = mocha \$(MOCHA.FLAGS)
MOCHA.FLAGS         = --compilers coffee:coffee-script/register --require chai --ui \$(MOCHA.INTERFACE) --reporter \$(MOCHA.REPORTER)
MOCHA.INTERFACE    := bdd
MOCHA.REPORTER     := min
UGLIFY.CMD          = uglifyjs \$(UGLIFY.FLAGS)
UGLIFY.FLAGS       := --mangle --compress

#all: main

#main: \$(PROD_DEPS)

dev: dev.coffee dev.jade dev.styl

dev.coffee:
	\$(COFFEE.CMD) --watch --output \$(BUILD.JS_DIR) \$(SRC.COFFEE_DIR)

dev.jade:
	\$(JADE.CMD) --watch \$(SRC.JADE_DIR) --out \$(BUILD.DIR)

dev.styl:
	\$(STYLUS.CMD) --watch \$(SRC.STYLUS_DIR) --out \$(BUILD.CSS_DIR)

prod: prod.coffee prod.jade prod.styl

prod.coffee:
	@echo -e '\033[33mCompiling CoffeeScript...\033[0m'
	\$(COFFEE.CMD) --output \$(BUILD.JS_DIR) \$(SRC.COFFEE_DIR)
	\$(UGLIFY.CMD) # [<files to uglify>] --output outputFile.min.js

prod.jade:
	@echo -e '\033[33mCompiling Jade...\033[0m'
	\$(JADE.CMD) \$(SRC.JADE_DIR) --out \$(BUILD.DIR)

prod.styl:
	@echo -e '\033[33mCompiling Stylus...\033[0m'
	\$(STYLUS.CMD) --compress \$(SRC.STYLUS_DIR) --out \$(BUILD.CSS_DIR)

#test:
#	\$(MOCHA.CMD) -w \$(TEST.DIR)

#clean:
#	@echo -e '\033[33mCleaning...\033[0m'
#	@rm -rf empty_file
#	@echo -e '\033[32mProject Clean!\033[0m'
EOF
fi
